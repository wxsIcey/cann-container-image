name: Build CANN Images

on:
  workflow_dispatch:
  push:
    branches:
      - "add_runner"
    paths:
      - ".github/workflows/docker.yml"
      - "cann/**"
      - "arg.json"
      - "docker-bake.hcl"
  pull_request:
    branches:
      - "main"
    paths:
      - ".github/workflows/docker.yml"
      - "cann/**"
      - "arg.json"
      - "docker-bake.hcl"
  release:
    types:
      - "published"

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.list-target.outputs.targets }}
      platforms: ${{ steps.list-platform.outputs.platforms }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List targets
        id: list-target
        uses: docker/bake-action/subaction/list-targets@v6
        with:
          files: |
            arg.json
            docker-bake.hcl

      - name: Create matrix
        id: list-platform
        run: |
          echo "platforms=$(docker buildx bake platforms --print | jq -cr '.target."platforms".platforms')" >>${GITHUB_OUTPUT}

  cann:
    name: build ${{ matrix.target }}-${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    needs:
      - prepare
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
        platform: ${{ fromJson(needs.prepare.outputs.platforms) }}
        include:
          - platform: linux/amd64
            runner: linux-x86_64
          - platform: linux/arm64
            runner: linux-aarch64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to AscendHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: swr.cn-east-3.myhuaweicloud.com
          username: ${{ secrets.ASCENDHUB_USERNAME }}
          password: ${{ secrets.ASCENDHUB_TOKEN }}

      - name: Login to DockerHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to Quay
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to OpenMind
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: swr.cn-southwest-2.myhuaweicloud.com
          username: ${{ secrets.OPENMIND_USERNAME }}
          password: ${{ secrets.OPENMIND_TOKEN }}

      - name: Login to ghcr.io
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          bake-target: "docker-metadata-action"

      - name: Build and push Docker image
        id: bake
        uses: docker/bake-action@v6
        with:
          files: |
            ./arg.json
            ./docker-bake.hcl
          targets: ${{ matrix.target }}
          set: |
            *.tags=quay.io/ascend/cann
            *.platform=${{ matrix.platform }}
            *.output=type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.target }}-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    runs-on: ubuntu-latest
    needs:
      - cann
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ matrix.target }}-*
          merge-multiple: true
      
      - name: Login to AscendHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: swr.cn-east-3.myhuaweicloud.com
          username: ${{ secrets.ASCENDHUB_USERNAME }}
          password: ${{ secrets.ASCENDHUB_TOKEN }}

      - name: Login to DockerHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to Quay
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to OpenMind
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: swr.cn-southwest-2.myhuaweicloud.com
          username: ${{ secrets.OPENMIND_USERNAME }}
          password: ${{ secrets.OPENMIND_TOKEN }}

      - name: Login to ghcr.io
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(docker buildx bake  --print | jq -cr '.target."cann".tags')

  

      
